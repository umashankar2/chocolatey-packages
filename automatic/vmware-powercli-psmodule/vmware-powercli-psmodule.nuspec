<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey-community/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.microsoft.com/en-us/nuget/reference/nuspec. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>vmware-powercli-psmodule</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>13.2.1.22851661</version>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>virtualex bcurran3</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>VMware.PowerCLI (PowerShell Module)</title>
    <authors>VMware by Broadcom</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://developer.broadcom.com/powercli</projectUrl>
    <iconUrl>https://rawcdn.githack.com/virtualex-itv/chocolatey-packages/6aa0e16032e742aaea35f0cd428fb310f77a57dc/icons/vmware-powercli-psmodule.png</iconUrl>
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>Copyright © 2005-2024 Broadcom. All Rights Reserved. The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.</copyright>
    <tags>vmware powercli vsphere automation client virtual machine virtualization esx esxi powershell hcx nsx-t</tags>
    <releaseNotes>https://vdc-repo.vmware.com/vmwb-repository/dcr-public/c59c5417-e2df-4c49-a5c2-24bc430a7817/806e6648-4c8d-4c37-9925-3998100e421a/vmware-powercli-1321-release-notes.html</releaseNotes>
    <licenseUrl>https://www.broadcom.com/company/legal/licensing</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <packageSourceUrl>https://github.com/virtualex-itv/chocolatey-packages/tree/master/automatic/vmware-powercli-psmodule</packageSourceUrl>
    <docsUrl>https://developer.broadcom.com/powercli</docsUrl>
    <summary>PowerCLI is the tool millions of customers around the world use to manage and automate their VMware environments.  Discover what you can achieve with PowerCLI today.</summary>
    <description><![CDATA[---

## Package Parameters

This package is designed to install the `VMware.PowerCLI` PowerShell module for the `-Scope CurrentUser` by default.

The following parameter is available to install the module for `-Scope AllUsers`.

* `/ALLUSERS`
Example:

```shell
choco install vmware-powercli-psmodule --params='"/ALLUSERS"'
```

---

## [choco://vmware-powercli-psmodule](choco://vmware-powercli-psmodule)

To use choco:// protocol URLs, install [(unofficial) choco:// Protocol support](https://chocolatey.org/packages/choco-protocol-support)

---

PowerCLI is a command-line interface for managing and automating all aspects of vSphere management, including network, storage, VM, guest OS and more.  PowerCLI is distributed as PowerShell modules, which contain a combined number of over 700 cmdlets (commands.)

**Please Note**: This is an automatically updated package. If you find it is out of date by more than a day or two, please contact the maintainer(s) and let them know the package is no longer updating correctly.
]]></description>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#specifying-version-ranges-in-.nuspec-files -->
    <dependencies>
      <dependency id="dotnet4.5" version="4.5.20120822" />
      <dependency id="powershell" version="5.1.14409.1005" />
    </dependencies>

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <!-- this section controls what actually gets packaged into the Chocolatey package -->
  <!-- Uncomment to limit what is packed in -->
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
